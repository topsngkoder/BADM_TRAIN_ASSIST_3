/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–∞ —Å —Å–∞–π—Ç–∞ Badminton4u —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–∫—Å–∏
 * @param {string} url - URL –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞ –Ω–∞ Badminton4u
 * @returns {Promise<number>} - –†–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–∞ –≤ –ø–∞—Ä–Ω–æ–º —Ä–∞–∑—Ä—è–¥–µ
 */
export async function getPlayerRatingFromBadminton4u(url) {
    if (!url) {
        console.error('‚ùå URL –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞ –Ω–µ —É–∫–∞–∑–∞–Ω');
        throw new Error('URL –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞ –Ω–µ —É–∫–∞–∑–∞–Ω');
    }

    console.log('üîç –ü–æ–ª—É—á–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–∞ —Å —Å–∞–π—Ç–∞ Badminton4u...');
    console.log('üîó URL –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞:', url);

    try {
        console.time('proxyFetch');
        
        // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
        const proxyUrl = `/api/get-player-rating?url=${encodeURIComponent(url)}`;
        console.log('üîó URL –ø—Ä–æ–∫—Å–∏:', proxyUrl);

        // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–º—É –ø—Ä–æ–∫—Å–∏
        const response = await fetch(proxyUrl);
        
        if (!response.ok) {
            try {
                // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å JSON —Å –æ—à–∏–±–∫–æ–π
                const errorData = await response.json();
                console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏:', errorData);
                throw new Error(errorData.error || `–û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${response.status} ${response.statusText}`);
            } catch (jsonError) {
                // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JSON, –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
                const errorText = await response.text();
                console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏ (–Ω–µ JSON):', errorText.substring(0, 200));
                throw new Error(`–û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${response.status} ${response.statusText}`);
            }
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏
        try {
            const data = await response.json();
            
            if (!data.rating) {
                console.error('‚ùå –°–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –Ω–µ –≤–µ—Ä–Ω—É–ª —Ä–µ–π—Ç–∏–Ω–≥:', data);
                throw new Error('–°–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –Ω–µ –≤–µ—Ä–Ω—É–ª —Ä–µ–π—Ç–∏–Ω–≥');
            }
            
            const rating = parseInt(data.rating);
            console.log('‚úÖ –†–µ–π—Ç–∏–Ω–≥ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–∫—Å–∏:', rating);
            
            console.timeEnd('proxyFetch');
            return rating;
        } catch (jsonError) {
            console.timeEnd('proxyFetch');
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON –æ—Ç —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏:', jsonError);
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏');
        }

    } catch (error) {
        console.timeEnd('proxyFetch');
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–∫—Å–∏:', error);
        throw error;
    }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–∞ –≤ –ø–∞—Ä–Ω–æ–º —Ä–∞–∑—Ä—è–¥–µ —Å —Å–∞–π—Ç–∞ Badminton4u
 * @param {string} url - URL –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞ –Ω–∞ Badminton4u
 * @returns {Promise<number>} - –†–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–∞ –≤ –ø–∞—Ä–Ω–æ–º —Ä–∞–∑—Ä—è–¥–µ
 */
export async function getPlayerDoubleRating(url) {
    if (!url) {
        console.error('‚ùå URL –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞ –Ω–µ —É–∫–∞–∑–∞–Ω');
        throw new Error('URL –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞ –Ω–µ —É–∫–∞–∑–∞–Ω');
    }

    console.log('üîç –ü–æ–ª—É—á–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–∞ —Å —Å–∞–π—Ç–∞ Badminton4u...');
    console.log('üîó URL –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞:', url);

    try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º CORS-–ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π CORS
        const corsProxy = 'https://corsproxy.io/?';
        const targetUrl = encodeURIComponent(url);
        const proxyUrl = `${corsProxy}${targetUrl}`;

        console.log('üîó URL —Å CORS-–ø—Ä–æ–∫—Å–∏:', proxyUrl);

        // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–∞–π—Ç—É —á–µ—Ä–µ–∑ CORS-–ø—Ä–æ–∫—Å–∏
        const response = await fetch(proxyUrl, {
            headers: {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
            }
        });

        if (!response.ok) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${response.status} ${response.statusText}`);
            throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–≥—Ä–æ–∫–∞: ${response.status} ${response.statusText}`);
        }

        // –ü–æ–ª—É—á–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const html = await response.text();
        console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω HTML, –¥–ª–∏–Ω–∞: ${html.length} —Å–∏–º–≤–æ–ª–æ–≤`);

        if (!html || html.length < 100) {
            console.error('‚ùå –ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π HTML');
            throw new Error('–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π HTML');
        }

        // –í—ã–≤–æ–¥–∏–º —á–∞—Å—Ç—å HTML –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('üîç –§—Ä–∞–≥–º–µ–Ω—Ç HTML –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏:', html.substring(0, 500) + '...');

        // –ü–∞—Ä—Å–∏–º —Ä–µ–π—Ç–∏–Ω–≥ –∏–∑ HTML
        let rating = null;

        // –ú–µ—Ç–æ–¥ 1: –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å data-tab="rat_d" (double rating)
        console.log('üîç –ú–µ—Ç–æ–¥ 1: –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å data-tab="rat_d"...');
        const doubleRatingTabMatch = html.match(/<li[^>]*data-tab="rat_d"[^>]*>[\s\S]*?<b>double<\/b>\s*<dfn>(?:<dfn>)?(\d+)(?:<\/dfn>)?<\/dfn>[\s\S]*?<\/li>/i);

        if (doubleRatingTabMatch && doubleRatingTabMatch[1]) {
            rating = parseInt(doubleRatingTabMatch[1]);
            console.log(`‚úÖ –†–µ–π—Ç–∏–Ω–≥ –≤ –ø–∞—Ä–Ω–æ–º —Ä–∞–∑—Ä—è–¥–µ –Ω–∞–π–¥–µ–Ω –≤ —ç–ª–µ–º–µ–Ω—Ç–µ —Å data-tab="rat_d": ${rating}`);
            return rating;
        }

        // –ú–µ—Ç–æ–¥ 2: –ò—â–µ–º –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ h3 (—Ñ–æ—Ä–º–∞—Ç: nickname / rating)
        console.log('üîç –ú–µ—Ç–æ–¥ 2: –ò—â–µ–º –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ h3...');
        const headerRatingMatch = html.match(/<h3>[^<]*<dfn>\d+<\/dfn>\s*\/\s*(?:<dfn><\/dfn>)?<dfn>(\d+)<\/dfn><\/h3>/i);

        if (headerRatingMatch && headerRatingMatch[1]) {
            rating = parseInt(headerRatingMatch[1]);
            console.log(`‚úÖ –†–µ–π—Ç–∏–Ω–≥ –≤ –ø–∞—Ä–Ω–æ–º —Ä–∞–∑—Ä—è–¥–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ h3: ${rating}`);
            return rating;
        }

        // –ú–µ—Ç–æ–¥ 3: –ò—â–µ–º –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö (–ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏)
        console.log('üîç –ú–µ—Ç–æ–¥ 3: –ò—â–µ–º –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö...');
        const lastResultMatch = html.match(/\d+ –º–∏–Ω\.\s*(\d{3})\s*$/m);

        if (lastResultMatch && lastResultMatch[1]) {
            rating = parseInt(lastResultMatch[1]);
            console.log(`‚úÖ –†–µ–π—Ç–∏–Ω–≥ –Ω–∞–π–¥–µ–Ω –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö: ${rating}`);
            return rating;
        }

        // –ú–µ—Ç–æ–¥ 4: –ò—â–µ–º –≤ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
        console.log('üîç –ú–µ—Ç–æ–¥ 4: –ò—â–µ–º –≤ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ...');
        const statsMatch = html.match(/–æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞[\s\S]*?–ú–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ:[\s\S]*?–°—ã–≥—Ä–∞–Ω–æ —Ç—É—Ä–Ω–∏—Ä–æ–≤:/i);

        if (statsMatch) {
            // –ò—â–µ–º –ª—é–±—ã–µ —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã —Ä—è–¥–æ–º, —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ–π—Ç–∏–Ω–≥
            const ratingInStatsMatch = statsMatch[0].match(/(\d{3})/);

            if (ratingInStatsMatch && ratingInStatsMatch[1]) {
                rating = parseInt(ratingInStatsMatch[1]);
                console.log(`‚úÖ –†–µ–π—Ç–∏–Ω–≥ –Ω–∞–π–¥–µ–Ω –≤ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ: ${rating}`);
                return rating;
            }
        }

        // –ú–µ—Ç–æ–¥ 5: –ò—â–µ–º –ª—é–±—ã–µ —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã –ø–æ–¥—Ä—è–¥ –≤ HTML, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–µ–π—Ç–∏–Ω–≥–æ–º
        console.log('üîç –ú–µ—Ç–æ–¥ 5: –ò—â–µ–º –ª—é–±—ã–µ —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã –ø–æ–¥—Ä—è–¥ –≤ HTML...');
        const anyRatingMatch = html.match(/(\d{3})/);

        if (anyRatingMatch && anyRatingMatch[1]) {
            rating = parseInt(anyRatingMatch[1]);
            console.log(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã –ø–æ–¥—Ä—è–¥, –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ —Ä–µ–π—Ç–∏–Ω–≥: ${rating}`);
            return rating;
        }

        // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–∞ –Ω–∏ –æ–¥–Ω–∏–º –∏–∑ –º–µ—Ç–æ–¥–æ–≤');
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞ —Å Badminton4u:', error);
        throw error;
    }
}