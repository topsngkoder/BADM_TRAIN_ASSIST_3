// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase
// –ü–æ–ª—É—á–∞–µ–º URL –∏ –∫–ª—é—á –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const SUPABASE_URL = window.ENV?.SUPABASE_URL || 'https://your-supabase-url.supabase.co';
const SUPABASE_KEY = window.ENV?.SUPABASE_KEY || 'your-supabase-anon-key';
const supabase = supabase.createClient(SUPABASE_URL, SUPABASE_KEY);

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const playersList = document.getElementById('players-list');
const addPlayerBtn = document.getElementById('add-player-btn');
const playerModal = document.getElementById('player-modal');
const closeModal = document.querySelector('.close-modal');
const playerForm = document.getElementById('player-form');
const modalTitle = document.getElementById('modal-title');
const searchInput = document.getElementById('search-player');

// –¢–µ–∫—É—â–∏–π —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π –∏–≥—Ä–æ–∫
let currentPlayerId = null;

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–≥—Ä–æ–∫–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', loadPlayers);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
addPlayerBtn.addEventListener('click', () => openModal());
closeModal.addEventListener('click', () => closeModalWindow());
playerForm.addEventListener('submit', handlePlayerSubmit);
searchInput.addEventListener('input', handleSearch);

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ Supabase
async function loadPlayers() {
    playersList.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤...</div>';
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã players
        const { data, error } = await supabase
            .from('players')
            .select('*')
            .order('name');
        
        if (error) throw error;
        
        displayPlayers(data);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–≥—Ä–æ–∫–æ–≤:', error);
        playersList.innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</div>';
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤
function displayPlayers(players) {
    if (players.length === 0) {
        playersList.innerHTML = '<div class="no-data">–ò–≥—Ä–æ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
        return;
    }
    
    playersList.innerHTML = '';
    
    players.forEach(player => {
        const playerCard = document.createElement('div');
        playerCard.className = 'player-card';
        playerCard.innerHTML = `
            <div class="player-name">${player.name}</div>
            <div class="player-level ${player.level}">${getLevelName(player.level)}</div>
            <div class="player-contact">
                ${player.phone ? `<div>üì± ${player.phone}</div>` : ''}
                ${player.email ? `<div>‚úâÔ∏è ${player.email}</div>` : ''}
            </div>
            ${player.notes ? `<div class="player-notes">${player.notes}</div>` : ''}
            <div class="player-actions">
                <button class="edit-btn" data-id="${player.id}">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                <button class="delete-btn" data-id="${player.id}">–£–¥–∞–ª–∏—Ç—å</button>
            </div>
        `;
        
        playersList.appendChild(playerCard);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        playerCard.querySelector('.edit-btn').addEventListener('click', () => editPlayer(player.id));
        playerCard.querySelector('.delete-btn').addEventListener('click', () => deletePlayer(player.id));
    });
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —É—Ä–æ–≤–Ω—è
function getLevelName(level) {
    const levels = {
        'beginner': '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
        'intermediate': '–°—Ä–µ–¥–Ω–∏–π',
        'advanced': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
        'pro': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª'
    };
    
    return levels[level] || level;
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openModal(playerId = null) {
    modalTitle.textContent = playerId ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–∞' : '–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞';
    currentPlayerId = playerId;
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    playerForm.reset();
    
    if (playerId) {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        loadPlayerData(playerId);
    }
    
    playerModal.style.display = 'block';
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModalWindow() {
    playerModal.style.display = 'none';
    currentPlayerId = null;
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function loadPlayerData(playerId) {
    try {
        const { data, error } = await supabase
            .from('players')
            .select('*')
            .eq('id', playerId)
            .single();
        
        if (error) throw error;
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏
        document.getElementById('player-name').value = data.name || '';
        document.getElementById('player-level').value = data.level || 'beginner';
        document.getElementById('player-phone').value = data.phone || '';
        document.getElementById('player-email').value = data.email || '';
        document.getElementById('player-notes').value = data.notes || '';
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞');
        closeModalWindow();
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
async function handlePlayerSubmit(e) {
    e.preventDefault();
    
    const playerData = {
        name: document.getElementById('player-name').value,
        level: document.getElementById('player-level').value,
        phone: document.getElementById('player-phone').value,
        email: document.getElementById('player-email').value,
        notes: document.getElementById('player-notes').value
    };
    
    try {
        let result;
        
        if (currentPlayerId) {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
            result = await supabase
                .from('players')
                .update(playerData)
                .eq('id', currentPlayerId);
        } else {
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            result = await supabase
                .from('players')
                .insert([playerData]);
        }
        
        if (result.error) throw result.error;
        
        closeModalWindow();
        loadPlayers(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞');
    }
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–≥—Ä–æ–∫–∞
function editPlayer(playerId) {
    openModal(playerId);
}

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞
async function deletePlayer(playerId) {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞?')) {
        return;
    }
    
    try {
        const { error } = await supabase
            .from('players')
            .delete()
            .eq('id', playerId);
        
        if (error) throw error;
        
        loadPlayers(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞');
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
function handleSearch() {
    const searchTerm = searchInput.value.toLowerCase();
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–≥—Ä–æ–∫–æ–≤
    const playerCards = document.querySelectorAll('.player-card');
    
    playerCards.forEach(card => {
        const playerName = card.querySelector('.player-name').textContent.toLowerCase();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–ª–∏ —Å–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        if (playerName.includes(searchTerm)) {
            card.style.display = 'block';
        } else {
            card.style.display = 'none';
        }
    });
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
window.addEventListener('click', (e) => {
    if (e.target === playerModal) {
        closeModalWindow();
    }
});